import { createSlice, PayloadAction } from "@reduxjs/toolkit";
import { TrafficImage, TrafficImagesState, Location } from "./types";

// Initial state of the traffic images slice
const initialState: TrafficImagesState = {
  trafficImages: [],
  selectedDate: null,
  selectedLocation: null,
  locationList: [],
  loading: false,
  error: null,
};

// Slice for managing traffic images state
const trafficImagesSlice = createSlice({
  name: "trafficImages",
  initialState,
  reducers: {
    // Reducer for initiating the fetch of traffic images
    fetchTrafficImagesBegin: (state, action: PayloadAction<Date | null>) => {
      state.loading = true;
      state.error = null;
      state.selectedDate = action.payload;
    },
    // Reducer for handling successful fetch of traffic images
    fetchTrafficImagesSuccess: (state, action: PayloadAction<TrafficImage[]>) => {
      state.loading = false;
      state.trafficImages = action.payload;
    },
    // Reducer for handling failed fetch of traffic images
    fetchTrafficImagesFailure: (state, action: PayloadAction<string>) => {
      state.loading = false;
      state.error = action.payload;
    },
    // Reducer for setting the list of locations
    setLocationList: (state, action: PayloadAction<Location[]>) => {
      state.locationList = action.payload;
    },
  },
});

// Export the actions generated by the slice
export const { 
  fetchTrafficImagesBegin, 
  fetchTrafficImagesSuccess, 
  fetchTrafficImagesFailure,
  setLocationList,
} = trafficImagesSlice.actions;

// Export the reducer as the default export of the module
export default trafficImagesSlice.reducer;
